name: Release Binary

on:
  workflow_dispatch:
  pull_request:
  push:
    paths-ignore:
      - '.github/**'
    branches:
      - main
    tags:
      - "*"
  schedule:
    - cron: '57 1 * * 6'

permissions:
  id-token: write
  attestations: write
  contents: write

env:
  CARGO_INCREMENTAL: 0

jobs:
  release:
    name: Release - ${{ matrix.platform.readable-target-name }}
    strategy:
      matrix:
        platform:
          - readable-target-name: Linux x86_64
            runs-on: ubuntu-latest
            archive-name: gilt-linux-x86_64
            rustup-target: x86_64-unknown-linux-gnu
            build-tool: zigbuild
            build-tool-target: x86_64-unknown-linux-gnu.2.17
            build-dst-dir: x86_64-unknown-linux-gnu

          - readable-target-name: Linux ARM
            runs-on: ubuntu-latest
            archive-name: gilt-linux-aarch64
            rustup-target: aarch64-unknown-linux-gnu
            build-tool: zigbuild
            build-tool-target: aarch64-unknown-linux-gnu.2.17
            build-dst-dir: aarch64-unknown-linux-gnu

          - readable-target-name: Windows x86_64
            runs-on: windows-latest
            archive-name: gilt-windows-x86_64
            rustup-target: x86_64-pc-windows-msvc
            build-tool: cargo
            build-tool-target: x86_64-pc-windows-msvc
            build-dst-dir: x86_64-pc-windows-msvc

          - readable-target-name: Windows ARM
            runs-on: windows-latest
            archive-name: gilt-windows-aarch64
            rustup-target: aarch64-pc-windows-msvc
            build-tool: cargo
            build-tool-target: aarch64-pc-windows-msvc
            build-dst-dir: aarch64-pc-windows-msvc

          - readable-target-name: macOS Universal Binary
            runs-on: macOS-latest
            archive-name: gilt-macos-ub
            rustup-target: x86_64-apple-darwin aarch64-apple-darwin
            build-tool: zigbuild
            build-tool-target: universal2-apple-darwin
            build-dst-dir: universal2-apple-darwin


    runs-on: ${{ matrix.platform.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install Rust Toolchain
        run: rustup toolchain install stable --profile minimal
    
      - name: Install Cross-Compilation Target
        run: rustup target add ${{ matrix.platform.rustup-target }}

      - if: ${{ ! startsWith(github.ref, 'refs/tags/') }}
        name: Enable Rust Cache
        uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2.8.0
        with:
          key: ${{ matrix.platform.build-tool-target }}
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - name: Install cargo-sbom
        uses: taiki-e/install-action@d31232495ad76f47aad66e3501e47780b49f0f3e # v2.57.5
        with:
          tool: cargo-sbom

      - if: ${{ matrix.platform.build-tool == 'zigbuild' }}
        name: Install cargo-zigbuild
        uses: taiki-e/install-action@d31232495ad76f47aad66e3501e47780b49f0f3e # v2.57.5
        with:
          tool: cargo-zigbuild

      - if: ${{ startsWith(matrix.platform.runs-on, 'ubuntu-') && matrix.platform.build-tool == 'zigbuild' }}
        name: Install Zig (Linux)
        run: sudo snap install zig --beta --classic
    
      - if: ${{ startsWith(matrix.platform.runs-on, 'macOS-') && matrix.platform.build-tool == 'zigbuild' }}
        name: Install old Zig (macOS) (https://github.com/rust-cross/cargo-zigbuild/issues/324)
        run: |
          brew update
          brew tap-new $USER/local-tap
          brew extract --version=0.11.0 zig $USER/local-tap
          HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK=TRUE brew install zig@0.11.0

      - if: ${{ startsWith(matrix.platform.runs-on, 'macOS-') }}
        name: Set macOS SDK Environment Variable
        run: |
          sudo xcode-select -s /Library/Developer/CommandLineTools
          echo "SDKROOT=$(xcrun --sdk macosx --show-sdk-path)" >> "${GITHUB_ENV}"

      - if: ${{ matrix.platform.build-tool == 'zigbuild' }}
        name: Build (Zig)
        run: cargo zigbuild --locked --release --target ${{ matrix.platform.build-tool-target }}

      - if: ${{ matrix.platform.build-tool == 'cargo' }}
        name: Build (Cargo)
        run: cargo build --locked --release --target ${{ matrix.platform.build-tool-target }}

      - name: Produce SBOM
        run: cargo sbom --output-format=spdx_json_2_3 > sbom-spdx.json

      - name: Publish artifacts and release
        uses: houseabsolute/actions-rust-release@48ce35fb40c3dab00791a3d6c485022341354c44 # v0.0.6
        with:
          executable-name: gilt
          target: ${{ matrix.platform.build-dst-dir }}
          changes-file:
          extra-files: |
            README.md
            sbom-spdx.json
          archive-name: ${{ matrix.platform.archive-name }}
      
      - if: ${{ ! startsWith(matrix.platform.runs-on, 'windows-') && (startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch') }}
        name: Publish SBOM Attestation (non-Windows)
        uses: actions/attest-sbom@bd218ad0dbcb3e146bd073d1d9c6d78e08aa8a0b # v2.4.0
        with:
          subject-path: ./${{ matrix.platform.archive-name }}.tar.gz, ./target/${{ matrix.platform.build-dst-dir }}/release/gilt, ./sbom-spdx.json
          sbom-path: ./sbom-spdx.json

      - if: ${{ ! startsWith(matrix.platform.runs-on, 'windows-') && (startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch') }}
        name: Publish Artifact Attestation (non-Windows)
        uses: actions/attest-build-provenance@e8998f949152b193b063cb0ec769d69d929409be # v2.4.0
        with:
          subject-path: ./${{ matrix.platform.archive-name }}.tar.gz, ./target/${{ matrix.platform.build-dst-dir }}/release/gilt, ./sbom-spdx.json

      - if: ${{ startsWith(matrix.platform.runs-on, 'windows-') && (startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch') }}
        name: Publish SBOM Attestation (Windows)
        uses: actions/attest-sbom@bd218ad0dbcb3e146bd073d1d9c6d78e08aa8a0b # v2.4.0
        with:
          subject-path: .\${{ matrix.platform.archive-name }}.zip, .\target\${{ matrix.platform.build-dst-dir }}\release\gilt.exe, .\sbom-spdx.json
          sbom-path: .\sbom-spdx.json

      - if: ${{ startsWith(matrix.platform.runs-on, 'windows-') && (startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch') }}
        name: Publish Artifact Attestation (Windows)
        uses: actions/attest-build-provenance@e8998f949152b193b063cb0ec769d69d929409be # v2.4.0
        with:
          subject-path: .\${{ matrix.platform.archive-name }}.zip, .\target\${{ matrix.platform.build-dst-dir }}\release\gilt.exe, .\sbom-spdx.json
